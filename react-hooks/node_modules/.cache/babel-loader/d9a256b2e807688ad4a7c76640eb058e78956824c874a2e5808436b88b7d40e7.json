{"ast":null,"code":"var _jsxFileName = \"C:\\\\Praticing-React\\\\react-hooks\\\\src\\\\components\\\\Home.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext({\n  theme: \"light\",\n  toggleTheme: () => {}\n});\nexport default function ThemeContextProvider({\n  children\n}) {\n  _s();\n  const [theme, setTheme] = useState(\"light\");\n  function toggleTheme() {\n    setTheme(prevTheme => prevTheme === \"light\" ? \"dark\" : \"light\");\n  }\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n// ðŸ”¥ Criando um hook para usar facilmente o contexto\n_s(ThemeContextProvider, \"1NR3O0/bzzhjlLyt740h+JhxH9c=\");\n_c = ThemeContextProvider;\nexport function useTheme() {\n  _s2();\n  return useContext(ThemeContext);\n}\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","ThemeContext","theme","toggleTheme","ThemeContextProvider","children","_s","setTheme","prevTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["C:/Praticing-React/react-hooks/src/components/Home.jsx"],"sourcesContent":["import React, { createContext, useState, useContext } from \"react\";\r\n\r\nexport const ThemeContext = createContext({\r\n    theme: \"light\",\r\n    toggleTheme: () => { },\r\n});\r\n\r\nexport default function ThemeContextProvider({ children }) {\r\n    const [theme, setTheme] = useState(\"light\");\r\n\r\n    function toggleTheme() {\r\n        setTheme(prevTheme => prevTheme === \"light\" ? \"dark\" : \"light\");\r\n    }\r\n\r\n    return (\r\n        <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    );\r\n}\r\n\r\n// ðŸ”¥ Criando um hook para usar facilmente o contexto\r\nexport function useTheme() {\r\n    return useContext(ThemeContext);\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC;EACtCM,KAAK,EAAE,OAAO;EACdC,WAAW,EAAEA,CAAA,KAAM,CAAE;AACzB,CAAC,CAAC;AAEF,eAAe,SAASC,oBAAoBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACvD,MAAM,CAACJ,KAAK,EAAEK,QAAQ,CAAC,GAAGV,QAAQ,CAAC,OAAO,CAAC;EAE3C,SAASM,WAAWA,CAAA,EAAG;IACnBI,QAAQ,CAACC,SAAS,IAAIA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EACnE;EAEA,oBACIR,OAAA,CAACC,YAAY,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAER,KAAK;MAAEC;IAAY,CAAE;IAAAE,QAAA,EAChDA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC;;AAEA;AAAAR,EAAA,CAdwBF,oBAAoB;AAAAW,EAAA,GAApBX,oBAAoB;AAe5C,OAAO,SAASY,QAAQA,CAAA,EAAG;EAAAC,GAAA;EACvB,OAAOnB,UAAU,CAACG,YAAY,CAAC;AACnC;AAACgB,GAAA,CAFeD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}